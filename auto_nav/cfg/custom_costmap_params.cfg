#!/usr/bin/env python
PACKAGE = "auto_nav"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("Total_Layers", int_t, 0, "An Integer parameter", 4,  0, 5)
gen.add("FirstLayer", int_t, 0, "An Integer parameter", 253,  0, 255)
gen.add("SecondLayer", int_t, 0, "An Integer parameter", 253,  0, 255)
gen.add("ThirdLayer", int_t, 0, "An Integer parameter", 253,  0, 255)
gen.add("FourthLayer", int_t, 0, "An Integer parameter", 251,  0, 255)
gen.add("FifthLayer", int_t, 0, "An Integer parameter", 224,  0, 255)
gen.add("Costmap_Height", double_t, 0, "A double parameter", 0.1 , 0, 3) #Open_Fields:0.9
gen.add("Cost_Propagation_Area", double_t, 0, "A double parameter", 0.3 , 0, 1.0) #Open_Fields:0.39
gen.add("Costmap_Radius", double_t, 0, "A double parameter", 0.05 , 0, 0.5)
gen.add("TotalSegmentPts", int_t, 0, "An Integer parameter", 25,  0, 100)
gen.add("enabled", bool_t, 0, "A Boolean parameter",  True)

size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
                       gen.const("Medium",     int_t, 1, "A medium constant"),
                       gen.const("Large",      int_t, 2, "A large constant"),
                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
                       "An enum to set size")

gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

exit(gen.generate(PACKAGE, "auto_nav", "custom_costmap_params"))
